name: Deploy

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read


jobs:
  terraform:
    name: Deploy
    runs-on: ubuntu-latest

    env:
      TF_VAR_discord_bot_token: ${{ secrets.DISCORD_BOT_TOKEN }}
      TF_VAR_discord_bot_category: ${{ secrets.DISCORD_BOT_CATEGORY }}

    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-1
          role-to-assume: ${{ secrets.AWS_ACTIONS_ROLE_ARN }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: terraform
        run: terraform validate

      - name: Terraform plan
        working-directory: terraform
        shell: bash
        run: terraform plan -input=false

      - name: Terraform Apply
        working-directory: terraform
        shell: bash
        run: terraform apply -input=false -auto-approve
      
      - name: Terraform Outputs
        id: output
        working-directory: terraform
        shell: bash
        run: terraform output -raw ecr_url
      
      - name: Build and push image
        env:
          ECR_URL: ${{ steps.output.outputs.stdout }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_URL:$IMAGE_TAG .
          docker push $ECR_URL:$IMAGE_TAG

      - name: Render task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
           task-definition: terraform/ecs-task-definition.json
           container-name: discordMusicLinkConverter
           image: $ECR_URL:$IMAGE_TAG
      
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: discordMusicLinkConverter-prod
          cluster: HomeInfra-prod-cluster
      